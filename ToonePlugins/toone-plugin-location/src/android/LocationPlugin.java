package toone.v3.plugins.location;import android.Manifest;import android.annotation.SuppressLint;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.Intent;import android.content.pm.PackageManager;import android.location.Location;import android.location.LocationManager;import android.provider.Settings;import android.util.Log;import android.widget.Toast;import org.apache.cordova.CallbackContext;import org.apache.cordova.CordovaPlugin;import org.apache.cordova.PermissionHelper;import org.apache.cordova.PluginResult;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;/** * ┏┓　  　┏┓+ + * 　　　　　　　┏┛┻━━━┛┻┓ + + * 　　　　　　　┃　　　　　　　┃ * 　　　　　　　┃　　　━　　　┃ ++ + + + * 　　　　   ████━████ ┃+ * 　　　　　　　┃　　　　　　　┃ + * 　　　　　　　┃　　　┻　　　┃ * 　            ┃　　　　　　　┃ + + * 　　　　　　　┗━┓　　　┏━┛ * 　　　　　　　　　┃　　　┃ * 　　　　　　　　　┃　　　┃ + + + + * 　　　　　　　　　┃　　　┃　　　　Code is far away from bug with the CNM protecting * 　　　　　　　　　┃　　　┃ + 　　　　神兽保佑,代码无bug * 　　　　　　　　　┃　　　┃ * 　　　　　　　　　┃　　　┃　　+ * 　　　　　　　　　┃　 　　┗━━━┓ + + * 　　　　　　　　　┃ 　　　　　　　┣┓ * 　　　　　　　　　┃ 　　　　　　　┏┛ * 　　　　　　　　　┗┓┓┏━┳┓┏┛ + + + + * 　　　　　　　　　　┃┫┫　┃┫┫ * 　　　　　　　　　　┗┻┛　┗┻┛+ + + + * 创建人：Joker * 创建日期： 2016/6/16 * 说明： * 修改： */public class LocationPlugin extends CordovaPlugin {    private static CallbackContext callbackContext;    private final String TAG = "LocationPlugin";    private boolean isFirst = true;    private String[] permissions = {Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION};    @Override    public boolean execute(String action, JSONArray args, final CallbackContext callbackContext) {        Log.i(TAG, "action = " + action + "\nargs = " + args);        LocationPlugin.callbackContext = callbackContext;        if (hasPermisssion()) {            getGPSLocation();        } else {            PermissionHelper.requestPermissions(this, 0, permissions);        }        return true;    }    public boolean hasPermisssion() {        for (String p : permissions) {            if (!PermissionHelper.hasPermission(this, p)) {                return false;            }        }        return true;    }    public void requestPermissions(int requestCode) {        PermissionHelper.requestPermissions(this, requestCode, permissions);    }    public void onRequestPermissionResult(int requestCode, String[] permissions, int[] grantResults) {        PluginResult result;        //This is important if we're using Cordova without using Cordova, but we have the geolocation plugin installed        if (callbackContext != null) {            for (int r : grantResults) {                if (r == PackageManager.PERMISSION_DENIED) {                    Log.i(TAG, "Permission Denied!");                    result = new PluginResult(PluginResult.Status.ILLEGAL_ACCESS_EXCEPTION);                    callbackContext.sendPluginResult(result);                    return;                }            }            getGPSLocation();            result = new PluginResult(PluginResult.Status.OK);            callbackContext.sendPluginResult(result);        }    }    /**     * 通过GPS获取定位信息     */    private void getGPSLocation() {        Location gps = LocationUtil.getGPSLocation(cordova.getActivity().getApplicationContext());        if (gps == null) {            Log.i(TAG, "net");            getNetworkLocation();        } else {            callBackResult(gps);        }    }    /**     * 通过网络等获取定位信息     */    private void getNetworkLocation() {        Location net = LocationUtil.getNetWorkLocation(cordova.getActivity().getApplicationContext());        if (net == null) {            Log.i(TAG, "添加监听");            try {                //设置定位监听，因为GPS定位，第一次进来可能获取不到，通过设置监听，可以在有效的时间范围内获取定位信息                LocationUtil.addLocationListener(cordova.getActivity(), LocationManager.GPS_PROVIDER, new LocationUtil.ILocationListener() {                    @Override                    public void onSuccessLocation(Location location) {                        Log.i(TAG, "onSuccessLocation");                        if (location != null && isFirst) {                            callBackResult(location);                            isFirst = false;                        }                    }                    @Override                    public void onProviderEnable(String provider) {                        Log.i(TAG, "onProviderEnable");                        @SuppressLint("MissingPermission") Location location = LocationUtil.getLocationManager(cordova.getActivity()).getLastKnownLocation(provider);                        callBackResult(location);                    }                    @Override                    public void onProviderDisable() {                        Log.e(TAG, "onProviderDisable");                        cordova.getActivity().runOnUiThread(new Runnable() {                            @Override                            public void run() {                                AlertDialog.Builder dlg = new AlertDialog.Builder(cordova.getActivity());                                dlg.setTitle("提示")                                        .setMessage("定位服务未开启,请在设置中开启定位服务")                                        .setCancelable(false)                                        .setPositiveButton("设置", new DialogInterface.OnClickListener() {                                            @Override                                            public void onClick(DialogInterface dialog, int which) {                                                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);                                                cordova.getActivity().startActivity(intent);                                            }                                        }).create().show();                            }                        });                    }                });            } catch (Exception e) {                e.printStackTrace();                cordova.getActivity().runOnUiThread(new Runnable() {                    @Override                    public void run() {                        Toast.makeText(cordova.getActivity(), "获取不到系统定位信息", Toast.LENGTH_SHORT).show();                    }                });            }        } else {            callBackResult(net);        }    }    private void callBackResult(Location location) {        try {            if (location != null) {                double latitude = location.getLatitude();                double longitude = location.getLongitude();                JSONObject jsonObject = new JSONObject();                JSONObject json = new JSONObject();                jsonObject.put("latitude", latitude);                jsonObject.put("longitude", longitude);                json.put("coords", jsonObject);                if (callbackContext != null) {                    callbackContext.success(json);                }            }        } catch (JSONException e) {            e.printStackTrace();        }    }    @Override    public void onDestroy() {        super.onDestroy();        LocationUtil.unRegisterListener(cordova.getActivity());    }}